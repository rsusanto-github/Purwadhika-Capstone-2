# -*- coding: utf-8 -*-
"""CAPSTONE2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1s9UZFZ8sBQdw5iytA439EXJAWLEcfLRs
"""

from tabulate import tabulate
import datetime
import uuid

#EDIT LAGI
# Data produk per kategori
produk = {
    "Sofa": [
        {"nama": "Sofa Heim Studio NOBU Sofa Bed Abu", "harga": 1349000, "link": "https://media.dekoruma.com/catalogue/NRA-415158.jpg?dpr=1&fit=bounds&height=1000&optimize=high&quality=60&trim-color=ffffff&width=1000"},
        {"nama": "Sofa Heim Studio NOBU Sofa Bed Cream", "harga": 1349000, "link": "https://media.dekoruma.com/catalogue/NRA-415157.jpg?dpr=1&fit=bounds&height=1000&optimize=high&quality=60&trim-color=ffffff&width=1000"},
        {"nama": "Sofa Bed Multifungsi", "harga": 4200000, "link": "https://dekoruma.com/sofa3"},
        {"nama": "Sofa Kulit 3 Seater", "harga": 5800000, "link": "https://dekoruma.com/sofa4"},
        {"nama": "Sofa Scandinavian", "harga": 3300000, "link": "https://dekoruma.com/sofa5"},
        {"nama": "Sofa Retro Velvet", "harga": 4100000, "link": "https://dekoruma.com/sofa6"},
        {"nama": "Sofa Modular", "harga": 6250000, "link": "https://dekoruma.com/sofa7"},
        {"nama": "Sofa Chesterfield", "harga": 7000000, "link": "https://dekoruma.com/sofa8"},
        {"nama": "Sofa Arm Chair", "harga": 2800000, "link": "https://dekoruma.com/sofa9"},
        {"nama": "Sofa Kayu Jati", "harga": 3900000, "link": "https://dekoruma.com/sofa10"}
    ],
    "Kursi": [
        {"nama": "Kursi Makan Kayu", "harga": 650000, "link": "https://dekoruma.com/kursi1"},
        {"nama": "Kursi Teras Rotan", "harga": 850000, "link": "https://dekoruma.com/kursi2"},
        {"nama": "Kursi Bar Tinggi", "harga": 950000, "link": "https://dekoruma.com/kursi3"},
        {"nama": "Kursi Kantor Ergonomis", "harga": 1250000, "link": "https://dekoruma.com/kursi4"},
        {"nama": "Kursi Lipat Besi", "harga": 400000, "link": "https://dekoruma.com/kursi5"},
        {"nama": "Kursi Goyang Klasik", "harga": 1100000, "link": "https://dekoruma.com/kursi6"},
        {"nama": "Kursi Anak Warna-warni", "harga": 300000, "link": "https://dekoruma.com/kursi7"},
        {"nama": "Kursi Akrilik Transparan", "harga": 980000, "link": "https://dekoruma.com/kursi8"},
        {"nama": "Kursi Gaming LED", "harga": 1450000, "link": "https://dekoruma.com/kursi9"},
        {"nama": "Kursi Ruang Tamu Mewah", "harga": 1750000, "link": "https://dekoruma.com/kursi10"}
    ],
    "Meja": [
        {"nama": "Meja Tamu Kaca", "harga": 1200000, "link": "https://dekoruma.com/meja1"},
        {"nama": "Meja Kerja Minimalis", "harga": 1800000, "link": "https://dekoruma.com/meja2"},
        {"nama": "Meja Makan 4 Kursi", "harga": 3200000, "link": "https://dekoruma.com/meja3"},
        {"nama": "Meja Rias Cermin LED", "harga": 2300000, "link": "https://dekoruma.com/meja4"},
        {"nama": "Meja Belajar Anak", "harga": 1500000, "link": "https://dekoruma.com/meja5"},
        {"nama": "Meja Bar Mini", "harga": 1750000, "link": "https://dekoruma.com/meja6"},
        {"nama": "Meja Lipat Dinding", "harga": 950000, "link": "https://dekoruma.com/meja7"},
        {"nama": "Meja Sudut Bulat", "harga": 850000, "link": "https://dekoruma.com/meja8"},
        {"nama": "Meja Kayu Solid", "harga": 2800000, "link": "https://dekoruma.com/meja9"},
        {"nama": "Meja Kopi Industrial", "harga": 1900000, "link": "https://dekoruma.com/meja10"}
    ],
    "Lemari": [
        {"nama": "Lemari Baju 2 Pintu", "harga": 2800000, "link": "https://dekoruma.com/lemari1"},
        {"nama": "Lemari Dapur Gantung", "harga": 1600000, "link": "https://dekoruma.com/lemari2"},
        {"nama": "Lemari Kaca Pajangan", "harga": 2500000, "link": "https://dekoruma.com/lemari3"},
        {"nama": "Lemari Laci Kayu", "harga": 2100000, "link": "https://dekoruma.com/lemari4"},
        {"nama": "Lemari Sepatu Sliding", "harga": 1800000, "link": "https://dekoruma.com/lemari5"},
        {"nama": "Lemari Rak Buku", "harga": 1900000, "link": "https://dekoruma.com/lemari6"},
        {"nama": "Lemari Besi Klasik", "harga": 2200000, "link": "https://dekoruma.com/lemari7"},
        {"nama": "Lemari Anak Warna-warni", "harga": 1300000, "link": "https://dekoruma.com/lemari8"},
        {"nama": "Lemari Plastik Modular", "harga": 950000, "link": "https://dekoruma.com/lemari9"},
        {"nama": "Lemari 3 Pintu Cermin", "harga": 3500000, "link": "https://dekoruma.com/lemari10"}
    ],
    "Rak": [
        {"nama": "Rak Dinding Hexagon", "harga": 450000, "link": "https://dekoruma.com/rak1"},
        {"nama": "Rak Buku Tinggi", "harga": 950000, "link": "https://dekoruma.com/rak2"},
        {"nama": "Rak Gantung Dapur", "harga": 600000, "link": "https://dekoruma.com/rak3"},
        {"nama": "Rak TV Minimalis", "harga": 1750000, "link": "https://dekoruma.com/rak4"},
        {"nama": "Rak Sudut 3 Tingkat", "harga": 700000, "link": "https://dekoruma.com/rak5"},
        {"nama": "Rak Sepatu Serbaguna", "harga": 850000, "link": "https://dekoruma.com/rak6"},
        {"nama": "Rak Display Barang", "harga": 1200000, "link": "https://dekoruma.com/rak7"},
        {"nama": "Rak Logam Industrial", "harga": 1500000, "link": "https://dekoruma.com/rak8"},
        {"nama": "Rak Buku Anak", "harga": 500000, "link": "https://dekoruma.com/rak9"},
        {"nama": "Rak Bumbu Dapur", "harga": 300000, "link": "https://dekoruma.com/rak10"}
    ],
    "Tempat Tidur": [
        {"nama": "Ranjang Kayu Jati", "harga": 4500000, "link": "https://dekoruma.com/tidur1"},
        {"nama": "Tempat Tidur Queen", "harga": 5000000, "link": "https://dekoruma.com/tidur2"},
        {"nama": "Tempat Tidur Anak", "harga": 3000000, "link": "https://dekoruma.com/tidur3"},
        {"nama": "Bed Storage Bawah", "harga": 4200000, "link": "https://dekoruma.com/tidur4"},
        {"nama": "Ranjang Lipat Dinding", "harga": 5800000, "link": "https://dekoruma.com/tidur5"},
        {"nama": "Tempat Tidur Tingkat", "harga": 3600000, "link": "https://dekoruma.com/tidur6"},
        {"nama": "Kasur Lantai Minimalis", "harga": 2700000, "link": "https://dekoruma.com/tidur7"},
        {"nama": "Tempat Tidur Besi", "harga": 3200000, "link": "https://dekoruma.com/tidur8"},
        {"nama": "Tempat Tidur King Size", "harga": 6200000, "link": "https://dekoruma.com/tidur9"},
        {"nama": "Tempat Tidur Bayi", "harga": 2400000, "link": "https://dekoruma.com/tidur10"}
    ],
    "Karpet": [
        {"nama": "Karpet Abu Polos", "harga": 500000, "link": "https://dekoruma.com/karpet1"},
        {"nama": "Karpet Bulu Tebal", "harga": 750000, "link": "https://dekoruma.com/karpet2"},
        {"nama": "Karpet Motif Geometris", "harga": 600000, "link": "https://dekoruma.com/karpet3"},
        {"nama": "Karpet Anak Kartun", "harga": 400000, "link": "https://dekoruma.com/karpet4"},
        {"nama": "Karpet Outdoor", "harga": 850000, "link": "https://dekoruma.com/karpet5"},
        {"nama": "Karpet Lantai Dapur", "harga": 350000, "link": "https://dekoruma.com/karpet6"},
        {"nama": "Karpet Ruang Tamu", "harga": 950000, "link": "https://dekoruma.com/karpet7"},
        {"nama": "Karpet Sajadah", "harga": 200000, "link": "https://dekoruma.com/karpet8"},
        {"nama": "Karpet Permadani", "harga": 1200000, "link": "https://dekoruma.com/karpet9"},
        {"nama": "Karpet Lantai Anti Slip", "harga": 450000, "link": "https://dekoruma.com/karpet10"}
    ],
    "Lampu": [
        {"nama": "Lampu Gantung Industrial", "harga": 750000, "link": "https://dekoruma.com/lampu1"},
        {"nama": "Lampu Meja Kayu", "harga": 450000, "link": "https://dekoruma.com/lampu2"},
        {"nama": "Lampu LED Strip", "harga": 300000, "link": "https://dekoruma.com/lampu3"},
        {"nama": "Lampu Tidur Unik", "harga": 280000, "link": "https://dekoruma.com/lampu4"},
        {"nama": "Lampu Plafon Minimalis", "harga": 550000, "link": "https://dekoruma.com/lampu5"},
        {"nama": "Lampu Standing Elegan", "harga": 850000, "link": "https://dekoruma.com/lampu6"},
        {"nama": "Lampu Hias Dinding", "harga": 400000, "link": "https://dekoruma.com/lampu7"},
        {"nama": "Lampu Gantung Bohemian", "harga": 620000, "link": "https://dekoruma.com/lampu8"},
        {"nama": "Lampu Outdoor Solar", "harga": 500000, "link": "https://dekoruma.com/lampu9"},
        {"nama": "Lampu LED Sensor", "harga": 350000, "link": "https://dekoruma.com/lampu10"}
    ],
    "Dekorasi Dinding": [
        {"nama": "Wall Art Abstrak", "harga": 300000, "link": "https://dekoruma.com/dekor1"},
        {"nama": "Jam Dinding Vintage", "harga": 250000, "link": "https://dekoruma.com/dekor2"},
        {"nama": "Cermin Hias Bulat", "harga": 550000, "link": "https://dekoruma.com/dekor3"},
        {"nama": "Foto Kanvas Alam", "harga": 400000, "link": "https://dekoruma.com/dekor4"},
        {"nama": "Kaligrafi Islami", "harga": 350000, "link": "https://dekoruma.com/dekor5"},
        {"nama": "Hiasan Kayu Ukir", "harga": 480000, "link": "https://dekoruma.com/dekor6"},
        {"nama": "Hanging Plant Wall", "harga": 320000, "link": "https://dekoruma.com/dekor7"},
        {"nama": "Poster Motivasi", "harga": 200000, "link": "https://dekoruma.com/dekor8"},
        {"nama": "Dekorasi Anyaman", "harga": 370000, "link": "https://dekoruma.com/dekor9"},
        {"nama": "Lukisan Tangan Asli", "harga": 800000, "link": "https://dekoruma.com/dekor10"}
    ],
    "Peralatan Dapur": [
        {"nama": "Set Pisau Dapur", "harga": 450000, "link": "https://dekoruma.com/dapur1"},
        {"nama": "Wajan Anti Lengket", "harga": 350000, "link": "https://dekoruma.com/dapur2"},
        {"nama": "Panci Stainless", "harga": 500000, "link": "https://dekoruma.com/dapur3"},
        {"nama": "Rak Piring Lipat", "harga": 300000, "link": "https://dekoruma.com/dapur4"},
        {"nama": "Dispenser Sabun Cair", "harga": 150000, "link": "https://dekoruma.com/dapur5"},
        {"nama": "Tatakan Panas Silikon", "harga": 100000, "link": "https://dekoruma.com/dapur6"},
        {"nama": "Sendok Garpu Set", "harga": 200000, "link": "https://dekoruma.com/dapur7"},
        {"nama": "Talenan Kayu", "harga": 180000, "link": "https://dekoruma.com/dapur8"},
        {"nama": "Wadah Makanan Kaca", "harga": 250000, "link": "https://dekoruma.com/dapur9"},
        {"nama": "Blender Portable", "harga": 550000, "link": "https://dekoruma.com/dapur10"}
    ]
}


# List untuk menyimpan item yang ditambahkan ke keranjang
keranjang = []

# ===== Fungsi Keranjang =====

def tampilkan_keranjang():
    # Fungsi ini digunakan untuk menampilkan isi keranjang belanja pengguna
    # Jika keranjang kosong, tampilkan pesan peringatan dan keluar dari fungsi
    if not keranjang:
        print("\n[!] Keranjang Anda kosong.")
        return

    # Jika keranjang tidak kosong, tampilkan isi keranjang dalam format tabel
    print("\n===== Isi Keranjang Anda =====")

    # Siapkan data dalam bentuk list of lists untuk ditampilkan dalam bentuk tabel
    tabel = []
    for i, item in enumerate(keranjang, 1):  # Mulai penomoran dari 1 agar lebih user-friendly
        subtotal = item['qty'] * item['harga']  # Hitung subtotal untuk setiap item
        # Tambahkan data item ke dalam tabel: [No, Nama Produk, Qty, Harga Satuan, Subtotal]
        tabel.append([i, item['nama'], item['qty'], f"Rp{item['harga']}", f"Rp{subtotal}"])

    # Tampilkan isi keranjang dalam bentuk tabel menggunakan library 'tabulate'
    print(tabulate(tabel, headers=["No", "Nama Produk", "Qty", "Harga Satuan", "Subtotal"], tablefmt="grid"))

# ===== Fungsi Tambah Item =====

def pilih_kategori():
    # Fungsi ini digunakan untuk menampilkan daftar kategori produk yang tersedia
    # dan meminta pengguna memilih salah satu kategori untuk melihat produknya

    while True:  # Loop terus sampai pengguna memilih kembali ke menu utama
        print("\n=== Pilih Kategori Produk ===")
        print("0. Kembali ke Menu Utama")  # Opsi untuk kembali ke menu utama

        # Tampilkan semua kategori produk yang tersedia
        for i, kategori in enumerate(produk, 1):  # Nomor dimulai dari 1
            print(f"{i}. {kategori}")

        try:
            # Minta input dari pengguna berupa nomor kategori
            pilihan = int(input("Masukkan nomor kategori: "))
            if pilihan == 0:
                break  # Jika memilih 0, keluar dari fungsi (kembali ke menu utama)

            # Konversi input menjadi nama kategori yang sesuai
            kategori_terpilih = list(produk.keys())[pilihan - 1]

            # Panggil fungsi untuk memilih produk dalam kategori yang dipilih
            pilih_produk(kategori_terpilih)

        except (ValueError, IndexError):
            # Tangani input yang tidak valid, seperti karakter non-angka atau nomor yang tidak ada
            print("[!] Input tidak valid.")

def pilih_produk(kategori):
    # Ambil daftar produk dari kategori yang dipilih
    daftar = produk[kategori]

    while True:
        # Tampilkan daftar produk dalam kategori yang dipilih
        print(f"\n== Daftar Produk {kategori} ==")
        print("0. Kembali ke daftar kategori")  # Opsi keluar dari daftar produk

        # Siapkan data dalam format tabel
        tabel = []
        for i, p in enumerate(daftar, 1):  # Penomoran produk mulai dari 1
            tabel.append([i, p['nama'], f"Rp{p['harga']}", p['link']])

        # Tampilkan tabel produk menggunakan 'tabulate'
        print(tabulate(tabel, headers=["No", "Nama Produk", "Harga", "Link"], tablefmt="grid"))

        try:
            # Minta input dari user: pilih produk berdasarkan nomor
            index = int(input("Pilih produk (nomor): ")) - 1

            # Kondisi berhenti: jika user memasukkan 0, maka index = -1, keluar dari fungsi
            if index == -1:
                break  # kembali ke daftar kategori

            # Ambil produk berdasarkan indeks
            item = daftar[index]

            # Minta input jumlah produk yang ingin dibeli
            qty = int(input("Berapa banyak yang ingin dibeli? "))

            if qty <= 0:
                print("[!] Qty harus lebih dari 0.")
                continue  # ulangi loop jika qty tidak valid

            # Tambahkan produk ke keranjang
            keranjang.append({"nama": item['nama'], "harga": item['harga'], "qty": qty})
            print(f"[\u2713] {item['nama']} telah dimasukkan ke keranjang.")

            break  # kondisi berhenti kedua: setelah berhasil membeli 1 produk, kembali ke daftar kategori

        except (ValueError, IndexError):
            # Tangani error input yang tidak valid (misal: huruf, atau nomor produk tidak ada)
            print("[!] Input tidak valid.")

# ===== Fungsi Hapus Item =====

def hapus_item():
    # Cek apakah keranjang kosong
    if not keranjang:
        print("\n[!] Keranjang Anda kosong.")
        return  # jika kosong, keluar dari fungsi dan kembali ke menu utama

    # Siapkan data untuk ditampilkan dalam bentuk tabel
    tabel = []
    for i, item in enumerate(keranjang, 1):  # enum dimulai dari 1 untuk tampilan nomor urut
        subtotal = item['qty'] * item['harga']  # hitung subtotal untuk setiap item
        tabel.append([i, item['nama'], item['qty'], f"Rp{item['harga']}", f"Rp{subtotal}"])

    # Tampilkan isi keranjang dalam format tabel menggunakan tabulate
    print("\n== Isi Keranjang Anda ==")
    print(tabulate(tabel, headers=["No", "Nama Produk", "Qty", "Harga Satuan", "Subtotal"], tablefmt="grid"))
    print("0. Kembali ke Menu Utama")  # opsi untuk kembali tanpa menghapus

    try:
        # Minta input dari pengguna untuk memilih item yang ingin dihapus
        index = int(input("Pilih item yang ingin dihapus (nomor): "))
        if index == 0:
            return  # jika input 0, kembali ke menu utama

        index -= 1  # konversi nomor urut ke index list Python (mulai dari 0)
        if 0 <= index < len(keranjang):
            removed = keranjang.pop(index)  # hapus item dari list keranjang
            print(f"[\u2713] {removed['nama']} berhasil dihapus dari keranjang.")
        else:
            print("[!] Nomor tidak valid.")  # jika nomor tidak ada dalam daftar
    except ValueError:
        # Tangani jika input bukan angka
        print("[!] Input tidak valid.")

# ===== Fungsi Update Item =====

def update_item():
    # Tampilkan isi keranjang terlebih dahulu
    tampilkan_keranjang()

    # Jika keranjang kosong, tidak bisa update item
    if not keranjang:
        return

    try:
        # Minta input dari user untuk memilih item berdasarkan nomor
        index = int(input("Pilih item yang ingin diubah (nomor, 0 untuk kembali): ")) - 1

        # Jika user memilih 0, kembali ke menu utama
        if index == -1:
            print("Kembali ke menu utama.")
            return

        # Validasi apakah input user berada dalam rentang indeks keranjang
        if 0 <= index < len(keranjang):
            # Minta input jumlah baru
            qty_baru = int(input("Masukkan qty baru: "))

            # Validasi jumlah baru harus lebih dari 0
            if qty_baru <= 0:
                print("[!] Qty harus lebih dari 0.")
                return

            # Update qty dari item yang dipilih
            keranjang[index]['qty'] = qty_baru
            print(f"[\u2713] Qty {keranjang[index]['nama']} telah diperbarui.")
        else:
            print("[!] Nomor tidak valid.")  # jika nomor di luar jangkauan list keranjang

    except ValueError:
        # Tangani jika user memasukkan nilai non-integer
        print("[!] Input tidak valid.")


# ===== Fungsi Checkout =====

def checkout():
    # Tampilkan isi keranjang terlebih dahulu
    tampilkan_keranjang()

    # Jika keranjang kosong, kembalikan ke menu utama
    if not keranjang:
        print("[!] Keranjang kosong. Tidak bisa melakukan checkout. Kembali ke menu utama.")
        return

    # Hitung total harga belanja dari semua item di keranjang
    total = sum(item['harga'] * item['qty'] for item in keranjang)
    print(f"\nTotal belanja Anda: Rp{total}")

    # Minta konfirmasi dari user apakah ingin melanjutkan checkout
    konfirmasi = input("Apakah Anda yakin ingin checkout? (1 = Ya, 0 = Tidak): ")
    if konfirmasi == "0":
        print("[!] Checkout dibatalkan. Kembali ke menu utama.")
        return
    elif konfirmasi != "1":
        print("[!] Input tidak valid. Kembali ke menu utama.")
        return

    # Loop sampai user memasukkan jumlah uang yang cukup
    while True:
        try:
            uang = int(input("Masukkan jumlah uang Anda: "))
            if uang >= total:
                # Hitung kembalian jika uang lebih dari total
                kembalian = uang - total
                print("\n[\u2713] Checkout berhasil.")

                # Buat informasi waktu dan ID transaksi unik
                now = datetime.datetime.now()
                tanggal_waktu = now.strftime("%d %B %Y %H:%M:%S")
                id_transaksi = str(uuid.uuid4()).split("-")[0].upper()
                nama_file = f"struk_checkout_{now.strftime('%Y-%m-%d_%H-%M-%S')}.txt"

                # Siapkan tabel struk dari isi keranjang
                tabel = []
                for i, item in enumerate(keranjang, 1):
                    tabel.append([
                        i,
                        item['nama'],
                        item['qty'],
                        f"Rp{item['harga']}",
                        f"Rp{item['qty'] * item['harga']}"
                    ])
                headers = ["No", "Nama Produk", "Qty", "Harga Satuan", "Subtotal"]
                struk_tabel = tabulate(tabel, headers=headers, tablefmt="grid")

                # Buat isi teks struk belanja
                isi_struk = f"""\
======= STRUK PEMBELIAN DEKORUMA =======

Dekoruma Living
Jl. Belanja No. 88, Jakarta
Telp: 021-12345678
Tanggal : {tanggal_waktu}
ID Transaksi: {id_transaksi}

{struk_tabel}

Total Belanja : Rp{total}
Uang Dibayar  : Rp{uang}
Kembalian     : Rp{kembalian}

========================================
Terima kasih telah berbelanja di Dekoruma!
"""

                # Tampilkan struk ke layar
                print("\n===== STRUK PEMBELIAN =====")
                print(isi_struk)

                # Simpan struk ke file teks
                with open(nama_file, "w", encoding="utf-8") as f:
                    f.write(isi_struk)
                print(f"[\u2713] Struk disimpan sebagai '{nama_file}'")

                # Kosongkan keranjang setelah checkout
                keranjang.clear()
                break


                # === Isi teks struk
                isi_struk = f"""\
======= STRUK PEMBELIAN DEKORUMA =======

Dekoruma Living
Jl. Belanja No. 88, Jakarta
Telp: 021-12345678
Tanggal : {tanggal_waktu}
ID Transaksi: {id_transaksi}

{struk_tabel}

Total Belanja : Rp{total}
Uang Dibayar  : Rp{uang}
Kembalian     : Rp{kembalian}

========================================
Terima kasih telah berbelanja di Dekoruma!
"""

                # === Tampilkan dan simpan struk
                print("\n===== STRUK PEMBELIAN =====")
                print(isi_struk)
                with open(nama_file, "w", encoding="utf-8") as f:
                    f.write(isi_struk)
                print(f"[\u2713] Struk disimpan sebagai '{nama_file}'")

                keranjang.clear()  # kosongkan keranjang setelah checkout
                break
            else:
                print(f"[!] Uang tidak cukup. Anda kekurangan Rp{total - uang}. Coba lagi.")
        except ValueError:
            print("[!] Input tidak valid. Masukkan angka saja.")



# ===== Menu Utama =====

def menu_utama():
    while True:
        # Tampilkan menu utama aplikasi
        print("\n===== MENU DEKORUMA =====")
        print("1. Lihat Keranjang")
        print("2. Tambah Item")
        print("3. Hapus Item dari Keranjang")
        print("4. Update Item di Keranjang")
        print("5. Checkout")
        print("6. Keluar")

        pilihan = input("Pilih menu (1-6): ")

        if pilihan == "1":
            tampilkan_keranjang()  # lihat isi keranjang
        elif pilihan == "2":
            pilih_kategori()  # tambah item baru
        elif pilihan == "3":
            hapus_item()  # hapus item dari keranjang
        elif pilihan == "4":
            update_item()  # ubah jumlah item
        elif pilihan == "5":
            checkout()  # proses pembayaran
        elif pilihan == "6":
            print("Terima kasih telah mengunjungi Dekoruma!")
            break
        else:
            print("[!] Pilihan tidak valid.")

# Jalankan Program
if __name__ == "__main__":
    menu_utama()